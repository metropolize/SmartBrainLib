plugins {
    id 'maven-publish'
    id 'java'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

archivesBaseName = "${mod_id}-forge-${minecraft_version}"

minecraft {
    mappings channel: mappings_channel, version: "${mappings_version}-${minecraft_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'

            mods {
                modClientRun {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'

            mods {
                modServerRun {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'

            mods {
                modDataRun {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

sourcesJar {
    from(project(":Forge").sourceSets.main.allSource)
}

def replaceProperties = [
        mod_id                 : mod_id,
        mod_name               : mod_name,
        mod_author             : mod_author,
        mod_version            : version,
        minecraft_version      : minecraft_version,
        minecraft_version_range: minecraft_version_range,
        forge_version          : forge_version,
        forge_version_range    : forge_version_range,
        loader_version_range   : forge_loader_version_range
]

processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching('META-INF/mods.toml') {
        expand replaceProperties
    }

    exclude '**/*.accesswidener'
}

jar {
    manifest {
        attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'              : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'      : minecraft_version
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = archivesBaseName
            artifact jar
            artifact sourcesJar
        }
    }
}
